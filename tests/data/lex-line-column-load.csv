1,1,"/**
 * An example protocol in Avro IDL. DO NOT MODIFY, requires to be byte identical for tests.
 * Taken from: <https://avro.apache.org/docs/1.11.1/idl-language/>
 */"
5,1,"@"
5,2,"namespace"
5,11,"("
5,12,"org.apache.avro.test"
5,34,")"
6,1,"protocol"
6,10,"Simple"
6,17,"{"
7,5,"/** Documentation for the enum type Kind */"
8,5,"@"
8,6,"aliases"
8,13,"("
8,14,"["
8,15,"org.foo.KindOf"
8,31,"]"
8,32,")"
9,5,"enum"
9,10,"Kind"
9,15,"{"
10,9,"FOO"
10,12,","
11,9,"BAR"
11,12,","
11,14,"// the bar enum value"
12,9,"BAZ"
13,5,"}"
13,9,"="
13,11,"FOO"
13,14,";"
13,16,"// For schema evolution purposes, unmatched values do not throw an error, but are resolved to FOO."
15,5,"/** MD5 hash; good enough to avoid most collisions, and smaller than (for example) SHA256. */"
16,5,"fixed"
16,11,"MD5"
16,14,"("
16,15,"16"
16,17,")"
16,18,";"
18,5,"record"
18,12,"TestRecord"
18,23,"{"
19,9,"/** Record name; has no intrinsic order */"
20,9,"string"
20,16,"@"
20,17,"order"
20,22,"("
20,23,"ignore"
20,31,")"
20,33,"name"
20,37,";"
22,9,"Kind"
22,14,"@"
22,15,"order"
22,20,"("
22,21,"descending"
22,33,")"
22,35,"kind"
22,39,";"
24,9,"MD5"
24,13,"hash"
24,17,";"
26,9,"/* Note that 'null' is the first union type. Just like .avsc / .avpr files, the default value
		   must be of the first union type. */"
28,9,"union"
28,15,"{"
28,17,"null"
28,21,","
28,23,"MD5"
28,27,"}"
28,29,"/** Optional field */"
28,51,"@"
28,52,"aliases"
28,59,"("
28,60,"["
28,61,"hash"
28,67,"]"
28,68,")"
28,70,"nullableHash"
28,83,"="
28,85,"null"
28,89,";"
30,9,"array"
30,14,"<"
30,15,"long"
30,19,">"
30,21,"arrayOfLongs"
30,33,";"
31,5,"}"
33,5,"/** Errors are records that can be thrown from a method */"
34,5,"error"
34,11,"TestError"
34,21,"{"
35,9,"string"
35,16,"message"
35,23,";"
36,5,"}"
38,5,"string"
38,12,"hello"
38,17,"("
38,18,"string"
38,25,"greeting"
38,33,")"
38,34,";"
40,5,"/** Return what was given. Demonstrates the use of backticks to name types/fields/messages/parameters after keywords */"
41,5,"TestRecord"
41,16,"echo"
41,20,"("
41,21,"TestRecord"
41,32,"`"
41,33,"record"
41,39,"`"
41,40,")"
41,41,";"
42,5,"int"
42,9,"add"
42,12,"("
42,13,"int"
42,17,"arg1"
42,21,","
42,23,"int"
42,27,"arg2"
42,31,")"
42,32,";"
43,5,"bytes"
43,11,"echoBytes"
43,20,"("
43,21,"bytes"
43,27,"data"
43,31,")"
43,32,";"
44,5,"void"
44,10,"`"
44,11,"error"
44,16,"`"
44,17,"("
44,18,")"
44,20,"throws"
44,27,"TestError"
44,36,";"
46,5,"// The oneway keyword forces the method to return null."
47,5,"void"
47,10,"ping"
47,14,"("
47,15,")"
47,17,"oneway"
47,23,";"
48,1,"}"
